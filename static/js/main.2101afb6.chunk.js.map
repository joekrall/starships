{"version":3,"sources":["Table.js","SearchBar.js","App.js","utilities.js","index.js"],"names":["StarshipTable","props","Table","variant","starships","length","map","starship","Fragment","name","model","starship_class","hyperdrive_rating","cargo_capacity","cost_in_credits","crew","SearchBar","useState","InputGroup","FormControl","placeholder","onChange","event","searchTerm","setSearchTerm","handleInputChange","target","value","App","setStarships","setCount","useEffect","Promise","resolve","reject","getStarships","url","axios","get","then","response","retrievedStarships","concat","data","results","next","securedRequest","substring","console","log","catch","error","Utils","className","Col","md","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAiDeA,EA1CO,SAACC,GAGrB,OACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QACb,+BACE,4BACE,oCACA,qCACA,qCACA,iDACA,8CACA,+CACA,sCAGJ,+BACCF,EAAMG,UAAUC,OAAS,EACxBJ,EAAMG,UAAUE,KAAI,SAACC,GAAD,OACpB,kBAAC,IAAMC,SAAP,KACA,4BACE,4BAAKD,EAASE,MACd,4BAAKF,EAASG,OACd,4BAAKH,EAASI,gBACd,4BAAKJ,EAASK,mBACd,4BAAKL,EAASM,gBACd,4BAAKN,EAASO,iBACd,4BAAKP,EAASQ,WAKd,4BACE,yD,gBCbCC,EAxBG,SAACf,GAEjB,IAF2B,EAGSgB,mBADd,IAFK,6BAS3B,OACM,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CACEC,YAAY,0BACZC,SAAU,SAAAC,GAAK,OARG,SAACC,GACzBtB,EAAMuB,cAAcD,GAQZE,CAAkBH,EAAMI,OAAOC,Y,cC2B5BC,MApCf,WAAgB,IAAD,EAEuBX,mBAAS,IAFhC,mBAENM,EAFM,KAEMC,EAFN,OAGqBP,mBAAS,IAH9B,mBAGNb,EAHM,KAGKyB,EAHL,OAIaZ,mBAAS,GAJtB,mBAICa,GAJD,WAmBb,OAXAC,qBAAU,WACR,IAAIC,SAAQ,SAACC,EAASC,ICfE,SAAfC,EAAgBC,EAAKhC,EAAW6B,EAASC,GAEpDG,IAAMC,IAAIF,GACPG,MAAK,SAAAC,GACJ,IAAMC,EAAqBrC,EAAUsC,OAAOF,EAASG,KAAKC,SAC1D,GAA2B,OAAvBJ,EAASG,KAAKE,KAAe,CAC/B,IAAIC,EAAkBN,EAASG,KAAKE,KAAME,UAAU,EAAG,GAAK,IAAOP,EAASG,KAAKE,KAAME,UAAU,GACjGC,QAAQC,IAAIH,GACZX,EAAaW,EAAgBL,EAAoBR,EAASC,QAE1DD,EAAQQ,MAGXS,OAAM,SAAAC,GACLH,QAAQC,IAAIE,GACZjB,EAAO,8DDCPkB,CAAA,kDAA8D7B,GAAc,GAAIU,EAASC,MAExFK,MAAK,SAAAC,GACJV,EAASU,EAASnC,QAClBwB,EAAaW,QAEhB,CAACjB,IAIF,yBAAK8B,UAAU,OACb,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGF,UAAU,kBACpB,kBAACC,EAAA,EAAD,CAAKD,UAAU,wCACf,yCAEA,kBAACC,EAAA,EAAD,CAAKD,UAAU,wCACf,8DAGA,kBAAC,EAAD,CAAW7B,cAAeA,KAE5B,kBAAC,EAAD,CAAepB,UAAWA,MElChCoD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2101afb6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Col, Table} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst StarshipTable = (props) => {\r\n\r\n\r\n  return (\r\n      <Table variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Model</th>\r\n            <th>Class</th>\r\n            <th>Hyperdrive Rating</th>\r\n            <th>Cargo Capacity</th>\r\n            <th>Cost in Credits</th>\r\n            <th>Crew</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {props.starships.length > 0  ? (\r\n          props.starships.map((starship) => (\r\n          <React.Fragment>\r\n          <tr>\r\n            <td>{starship.name}</td>\r\n            <td>{starship.model}</td>\r\n            <td>{starship.starship_class}</td>\r\n            <td>{starship.hyperdrive_rating}</td>\r\n            <td>{starship.cargo_capacity}</td>   \r\n            <td>{starship.cost_in_credits}</td>\r\n            <td>{starship.crew}</td>\r\n          </tr>\r\n          </React.Fragment>\r\n          ))      \r\n          ) : (\r\n            <tr>\r\n              <td >Starships loading ...</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </ Table>\r\n  );\r\n\r\n}\r\n\r\nexport default StarshipTable","import React, { useState, useEffect } from \"react\";\r\nimport { InputGroup, FormControl, Col  } from \"react-bootstrap\";\r\n\r\nconst SearchBar = (props) => {\r\n\r\n  const initialSearch = \"\";\r\n  const [searchTerm, setSearchTerm] = useState(initialSearch);\r\n\r\n  const handleInputChange = (searchTerm) => {\r\n    props.setSearchTerm(searchTerm);\r\n  }\r\n\r\n  return (\r\n        <InputGroup>\r\n        <FormControl\r\n          placeholder=\"Search by name or model\"\r\n          onChange={event => \r\n            handleInputChange(event.target.value)\r\n          }\r\n        />\r\n        </InputGroup>\r\n\r\n   )\r\n  \r\n}\r\n\r\n\r\nexport default SearchBar","import React, { useState, useEffect } from \"react\";\nimport StarshipTable from './Table';\nimport SearchBar from './SearchBar'\nimport * as Utils from './utilities'\nimport { Col, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [starships, setStarships] = useState([]);\n  const [count, setCount] = useState(0);\n  \n\n\n  useEffect(() => {\n    new Promise((resolve, reject) => {\n      Utils.getStarships(`https://swapi.dev/api/starships/?search=${searchTerm}`, [], resolve, reject)\n    })\n      .then(response => {\n        setCount(response.length);\n        setStarships(response);\n      })\n  }, [searchTerm]);\n\n\n  return (\n    <div className=\"App\">\n      <Col md={4} className=\"d-block header\" >\n        <Col className=\"d-inline-flex justify-content-center\">\n        <h1>Starships</h1>\n        \n        <Col className=\"d-inline-flex justify-content-center\">\n        <h5>Powered by the Star Wars API</h5>\n        </Col>\n        </Col>\n        <SearchBar setSearchTerm={setSearchTerm} />\n      </Col>\n      <StarshipTable starships={starships}/>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios'\r\n\r\nexport const getStarships = (url, starships, resolve, reject) => {\r\n  \r\n  axios.get(url)\r\n    .then(response => {\r\n      const retrievedStarships = starships.concat(response.data.results)\r\n      if (response.data.next !== null) {\r\n        let securedRequest = (response.data.next).substring(0, 4) + \"s\" + (response.data.next).substring(4);\r\n        console.log(securedRequest);\r\n        getStarships(securedRequest, retrievedStarships, resolve, reject)\r\n      } else {\r\n        resolve(retrievedStarships)\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      reject('Something wrong. Please refresh the page and try again.')\r\n    })\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}